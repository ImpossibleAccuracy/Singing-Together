[versions]
minSdk = "26"
targetSdk = "34"
compileSdk = "34"

jvmTargetVersion = "21"


kotlin = "1.9.23"
compose = "1.6.2"
spring = "3.2.5"
spring-swagger = "2.5.0"
javafx-plugin = "0.1.0"


kotlinx-datetime = "0.5.0"
kotlinx-collections = "0.3.7"
kotlinx-coroutines = "1.8.1"

agp = "8.2.0" # 8.4.0 is not supported by Intellij Idea
androidx-compose-activity = "1.9.0"
androidx-lifecycle-compose = "2.8.0"
androidx-uiTest = "1.6.7"

mysql = "8.0.32"
reactor = "1.2.2"
jackson = "2.16.2"
jjwt = "0.11.5"

voyager = "1.0.0"
voyager-koin = "1.1.0-alpha04"
koin = "3.5.6"
koin-compose = "1.1.5"
ktor = "2.3.11"
sqldelight = "2.0.1"

paging = "3.3.0-alpha02-0.5.1"
apiresult = "1.0.4"

xtaudio = "2.0"
mp3spi = "1.9.5.4"
dsp = "2.5"

settings-multiplatform = "1.1.1"
calf = "0.4.0"
chiptextfield = "0.7.0-alpha03"
composeImageLoader = "1.7.8"
humanReadable = "1.8.0"

h2 = "2.1.212"
junit = "5.10.2"
springmockk = "4.0.2"
byte-buddy = "1.14.15"
reactor-test = "3.6.3"

[libraries]
# KOTLIN
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib-jdk8", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "kotlinx-datetime" }
kotlinx-collections = { module = "org.jetbrains.kotlinx:kotlinx-collections-immutable", version.ref = "kotlinx-collections" }

# COROUTINES
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactive = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactive", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-reactor = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-reactor", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-javafx = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-javafx", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "kotlinx-coroutines" }

# PLATFORM
androidx-compose-activity = { module = "androidx.activity:activity-compose", version.ref = "androidx-compose-activity" }
androidx-compose-lifecycle = { module = "androidx.lifecycle:lifecycle-runtime-compose", version.ref = "androidx-lifecycle-compose" }
androidx-testManifest = { module = "androidx.compose.ui:ui-test-manifest", version.ref = "androidx-uiTest" }
androidx-junit4 = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "androidx-uiTest" }

# LIBRARIES
spring-boot-starter = { module = "org.springframework.boot:spring-boot-starter", version.ref = "spring" }
spring-starter-web = { module = "org.springframework.boot:spring-boot-starter-web", version.ref = "spring" }
spring-starter-security = { module = "org.springframework.boot:spring-boot-starter-security", version.ref = "spring" }
spring-starter-jpa = { module = "org.springframework.boot:spring-boot-starter-data-jpa", version.ref = "spring" }
spring-starter-validation = { module = "org.springframework.boot:spring-boot-starter-validation", version.ref = "spring" }
spring-starter-actuator = { module = "org.springframework.boot:spring-boot-starter-actuator", version.ref = "spring" }
spring-devtools = { module = "org.springframework.boot:spring-boot-devtools", version.ref = "spring" }

spring-swagger-ui = { module = "org.springdoc:springdoc-openapi-starter-webmvc-ui", version.ref = "spring-swagger" }
spring-swagger-api = { module = "org.springdoc:springdoc-openapi-starter-webmvc-api", version.ref = "spring-swagger" }

mysql-connector = { module = "mysql:mysql-connector-java", version.ref = "mysql" }
reactor-extensions = { module = "io.projectreactor.kotlin:reactor-kotlin-extensions", version.ref = "reactor" }

jackson-module = { module = "com.fasterxml.jackson.module:jackson-module-kotlin", version.ref = "jackson" }
jackson-annotations = { module = "com.fasterxml.jackson.core:jackson-annotations", version.ref = "jackson" }

jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }

voyager-navigator = { module = "cafe.adriel.voyager:voyager-navigator", version.ref = "voyager" }
voyager-koin = { module = "cafe.adriel.voyager:voyager-koin", version.ref = "voyager-koin" }
voyager-transitions = { module = "cafe.adriel.voyager:voyager-transitions", version.ref = "voyager" }

koin-core = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-compose", version.ref = "koin-compose" }
koin-compose-jvm = { module = "io.insert-koin:koin-compose-jvm", version.ref = "koin-compose" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-android = { module = "io.ktor:ktor-client-android", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-client-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }

sqldelight-coroutines = { module = "app.cash.sqldelight:coroutines-extensions", version.ref = "sqldelight" }
sqldelight-android = { module = "app.cash.sqldelight:android-driver", version.ref = "sqldelight" }
sqldelight-sqlite = { module = "app.cash.sqldelight:sqlite-driver", version.ref = "sqldelight" }

paging-compose = { module = "app.cash.paging:paging-common", version.ref = "paging" }
paging-compose-common = { module = "app.cash.paging:paging-compose-common", version.ref = "paging" }
apiresult = { module = "pro.respawn.apiresult:core", version.ref = "apiresult" }

# SOUND
xtaudio = { module = "com.github.sjoerdvankreel:xt.audio", version.ref = "xtaudio" }
mp3spi = { module = "com.googlecode.soundlibs:mp3spi", version.ref = "mp3spi" }
dsp-core = { module = "be.tarsos.dsp:core", version.ref = "dsp" }
dsp-jvm = { module = "be.tarsos.dsp:jvm", version.ref = "dsp" }

# OTHER
settings-multiplatform = { module = "com.russhwolf:multiplatform-settings", version.ref = "settings-multiplatform" }
calf-ui = { module = "com.mohamedrejeb.calf:calf-ui", version.ref = "calf" }
chiptextfield = { module = "io.github.dokar3:chiptextfield-m3", version.ref = "chiptextfield" }
composeImageLoader = { module = "io.github.qdsfdhvh:image-loader", version.ref = "composeImageLoader" }
humanReadable = { module = "nl.jacobras:Human-Readable", version.ref = "humanReadable" }

# TESTS
h2-connector = { module = "com.h2database:h2", version.ref = "h2" }
kotlin-test = { module = "org.jetbrains.kotlin:kotlin-test", version.ref = "kotlin" }
spring-test = { module = "org.springframework.boot:spring-boot-starter-test", version.ref = "spring" }
spring-mockk = { module = "com.ninja-squad:springmockk", version.ref = "springmockk" }
byte-buddy = { module = "net.bytebuddy:byte-buddy", version.ref = "byte-buddy" }
reactor-test = { module = "io.projectreactor:reactor-test", version.ref = "reactor-test" }

junit-api = { module = "org.junit.jupiter:junit-jupiter-api", version.ref = "junit" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "junit" }
junit-params = { module = "org.junit.jupiter:junit-jupiter-params", version.ref = "junit" }
junit-engine-jupiter = { module = "org.junit.jupiter:junit-jupiter-engine", version.ref = "junit" }

[bundles]
android = ["androidx-compose-activity", "androidx-compose-lifecycle"]

spring = [
    "spring-boot-starter",
    "spring-starter-web",
    "spring-starter-security",
    "spring-starter-jpa",
    "spring-starter-validation",
    "spring-starter-actuator"
]
mysql = ["mysql-connector"]
jackson = ["jackson-module", "jackson-annotations"]
jjwt = ["jjwt-impl", "jjwt-api", "jjwt-jackson"]

voyager = ["voyager-navigator", "voyager-koin", "voyager-transitions"]
koin = ["koin-core", "koin-compose"]
ktor = ["ktor-client-core", "ktor-serialization", "ktor-client-content-negotiation"]

[plugins]
spring-boot = { id = "org.springframework.boot", version.ref = "spring" }

javafx = { id = "org.openjfx.javafxplugin", version.ref = "javafx-plugin" }

kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-allopen = { id = "org.jetbrains.kotlin.plugin.allopen", version.ref = "kotlin" }
kotlin-spring = { id = "org.jetbrains.kotlin.plugin.spring", version.ref = "kotlin" }
kotlin-jpa = { id = "org.jetbrains.kotlin.plugin.jpa", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }

multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = { id = "org.jetbrains.compose", version.ref = "compose" }

android-application = { id = "com.android.application", version.ref = "agp" }
android-library = { id = "com.android.library", version.ref = "agp" }

sqldelight = { id = "app.cash.sqldelight", version.ref = "sqldelight" }
